/* client_collect.h
   Generated by wsdl2h 2.8.100 from InterfacesPostTapingCollectShuttleToMx0101.wsdl and typemap.dat
   2020-04-08 07:43:29 GMT

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE.

gSOAP XML Web services tools
Copyright (C) 2000-2020, Robert van Engelen, Genivia Inc. All Rights Reserved.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

/**

@page page_notes Notes

@note HINTS:
 - Run soapcpp2 on client_collect.h to generate the SOAP/XML processing logic:
   Use soapcpp2 -I to specify paths for #import
   Use soapcpp2 -j to generate improved proxy and server classes.
   Use soapcpp2 -r to generate a report.
 - Edit 'typemap.dat' to control namespace bindings and type mappings:
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Run Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -c to generate pure C code.
 - Use wsdl2h -R to include the REST operations defined by the WSDLs.
 - Use wsdl2h -O3 or -O4 to optimize by removing unused schema components.
 - Use wsdl2h -d to enable DOM support for xsd:any and xsd:anyType.
 - Use wsdl2h -F to simulate struct-type derivation in C (also works in C++).
 - Use wsdl2h -f to generate flat C++ class hierarchy, removes type derivation.
 - Use wsdl2h -g to generate top-level root elements with readers and writers.
 - Use wsdl2h -U to map XML names to C++ Unicode identifiers instead of _xNNNN.
 - Use wsdl2h -u to disable the generation of unions.
 - Use wsdl2h -L to remove this @note and all other @note comments.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE GENERATED soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2020, Robert van Engelen, Genivia Inc. All Rights Reserved.
The wsdl2h tool and its generated software are released under the GPL.
This software is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt c++,w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * $CONTAINER typemap variable:                                               *
 *   std::vector                                                              *
 *                                                                            *
\******************************************************************************/

#include <vector>
template <class T> class std::vector;

/******************************************************************************\
 *                                                                            *
 * $SIZE typemap variable:                                                    *
 *   int                                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to 'typemap.dat' then rerun wsdl2h (use wsdl2h -t typemap.dat):

ns1 = "http://tempuri.org/"
ns2 = "http://schemas.microsoft.com/2003/10/Serialization/"
ns3 = "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://tempuri.org/"
//gsoap ns1   schema namespace:	http://tempuri.org/
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns2	"http://schemas.microsoft.com/2003/10/Serialization/"
//gsoap ns2   schema namespace:	http://schemas.microsoft.com/2003/10/Serialization/
//gsoap ns2   schema form:	qualified

#define SOAP_NAMESPACE_OF_ns3	"http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01"
//gsoap ns3   schema namespace:	http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01
//gsoap ns3   schema elementForm:	qualified
//gsoap ns3   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in XSD root type "xs:anyType".
///
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__anyType or a derived type.  Use option -P to remove this class.
class xsd__anyType
{ public:
    _XML __item;
    struct soap *soap;
};

/// Built-in type "xs:QName".
typedef std::string xsd__QName;

/// Built-in type "xs:base64Binary".
class xsd__base64Binary
{ public:
    unsigned char *__ptr;
    int __size;
    char *id, *type, *options; // NOTE: non-NULL for DIME/MIME/MTOM XOP attachments only
};

/// Built-in type "xs:byte".
typedef char xsd__byte;

/// Built-in type "xs:unsignedByte".
typedef unsigned char xsd__unsignedByte;

/// Primitive built-in type "xs:ID".
typedef std::string xsd__ID;

/// Class wrapper xsd__ID__ for built-in type "xs:ID" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__ID__ or a derived type.  Use option -P to remove this class.
class xsd__ID__ : public xsd__anyType
{ public:
    xsd__ID                              __item                        ;
};

/// Primitive built-in type "xs:IDREF".
typedef std::string xsd__IDREF;

/// Class wrapper xsd__IDREF__ for built-in type "xs:IDREF" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__IDREF__ or a derived type.  Use option -P to remove this class.
class xsd__IDREF__ : public xsd__anyType
{ public:
    xsd__IDREF                           __item                        ;
};

/// Class wrapper xsd__QName__ for built-in type "xs:QName" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__QName__ or a derived type.  Use option -P to remove this class.
class xsd__QName__ : public xsd__anyType
{ public:
    xsd__QName                           __item                        ;
};

/// Primitive built-in type "xs:anyURI".
typedef std::string xsd__anyURI;

/// Class wrapper xsd__anyURI__ for built-in type "xs:anyURI" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__anyURI__ or a derived type.  Use option -P to remove this class.
class xsd__anyURI__ : public xsd__anyType
{ public:
    xsd__anyURI                          __item                        ;
};

/// Class wrapper xsd__base64Binary__ for built-in type "xs:base64Binary" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__base64Binary__ or a derived type.  Use option -P to remove this class.
class xsd__base64Binary__ : public xsd__anyType
{ public:
    xsd__base64Binary                    __item                        ;
};

/// Class wrapper xsd__boolean_ for built-in type "xs:boolean" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__boolean_ or a derived type.  Use option -P to remove this class.
class xsd__boolean_ : public xsd__anyType
{ public:
    bool                                 __item                        ;
};

/// Class wrapper xsd__byte__ for built-in type "xs:byte" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__byte__ or a derived type.  Use option -P to remove this class.
class xsd__byte__ : public xsd__anyType
{ public:
    xsd__byte                            __item                        ;
};

/// Class wrapper xsd__dateTime_ for built-in type "xs:dateTime" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__dateTime_ or a derived type.  Use option -P to remove this class.
class xsd__dateTime_ : public xsd__anyType
{ public:
    time_t                               __item                        ;
};

/// Primitive built-in type "xs:decimal".
typedef std::string xsd__decimal;

/// Class wrapper xsd__decimal__ for built-in type "xs:decimal" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__decimal__ or a derived type.  Use option -P to remove this class.
class xsd__decimal__ : public xsd__anyType
{ public:
    xsd__decimal                         __item                        ;
};

/// Class wrapper xsd__double_ for built-in type "xs:double" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__double_ or a derived type.  Use option -P to remove this class.
class xsd__double_ : public xsd__anyType
{ public:
    double                               __item                        ;
};

/// Primitive built-in type "xs:duration".
typedef std::string xsd__duration;

/// Class wrapper xsd__duration__ for built-in type "xs:duration" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__duration__ or a derived type.  Use option -P to remove this class.
class xsd__duration__ : public xsd__anyType
{ public:
    xsd__duration                        __item                        ;
};

/// Class wrapper xsd__float_ for built-in type "xs:float" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__float_ or a derived type.  Use option -P to remove this class.
class xsd__float_ : public xsd__anyType
{ public:
    float                                __item                        ;
};

/// Class wrapper xsd__int_ for built-in type "xs:int" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__int_ or a derived type.  Use option -P to remove this class.
class xsd__int_ : public xsd__anyType
{ public:
    int                                  __item                        ;
};

/// Class wrapper xsd__long_ for built-in type "xs:long" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__long_ or a derived type.  Use option -P to remove this class.
class xsd__long_ : public xsd__anyType
{ public:
    LONG64                               __item                        ;
};

/// Class wrapper xsd__short_ for built-in type "xs:short" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__short_ or a derived type.  Use option -P to remove this class.
class xsd__short_ : public xsd__anyType
{ public:
    short                                __item                        ;
};

/// Class wrapper xsd__string_ for built-in type "xs:string" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__string_ or a derived type.  Use option -P to remove this class.
class xsd__string_ : public xsd__anyType
{ public:
    std::string                          __item                        ;
};

/// Class wrapper xsd__unsignedByte__ for built-in type "xs:unsignedByte" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__unsignedByte__ or a derived type.  Use option -P to remove this class.
class xsd__unsignedByte__ : public xsd__anyType
{ public:
    xsd__unsignedByte                    __item                        ;
};

/// Class wrapper xsd__unsignedInt_ for built-in type "xs:unsignedInt" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__unsignedInt_ or a derived type.  Use option -P to remove this class.
class xsd__unsignedInt_ : public xsd__anyType
{ public:
    unsigned int                         __item                        ;
};

/// Class wrapper xsd__unsignedLong_ for built-in type "xs:unsignedLong" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__unsignedLong_ or a derived type.  Use option -P to remove this class.
class xsd__unsignedLong_ : public xsd__anyType
{ public:
    ULONG64                              __item                        ;
};

/// Class wrapper xsd__unsignedShort_ for built-in type "xs:unsignedShort" extends xsd__anyType.
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__unsignedShort_ or a derived type.  Use option -P to remove this class.
class xsd__unsignedShort_ : public xsd__anyType
{ public:
    unsigned short                       __item                        ;
};


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


class _ns1__TapingOutputConveyorNumber;

class _ns1__TapingOutputConveyorNumberResponse;

class _ns1__MissionStatus;

class _ns1__MissionStatusResponse;

class _ns1__ReportRunningMode;

class _ns1__ReportRunningModeResponse;

class ns3__PostTapingCollectShuttleTapingOutputConveyorRequest;

class ns3__PostTapingCollectShuttleMissionStatusRequest;

class ns3__PostTapingCollectShuttleReportRunningModeRequest;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01*
 *                                                                            *
\******************************************************************************/

/// @brief "http://schemas.microsoft.com/2003/10/Serialization/":char is a simpleType restriction of type xs:int.
///
typedef int ns2__char;

/// @brief Class wrapper for type ns2__char derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class ns2__char__ : public xsd__anyType
{ public:
    ns2__char                            __item;                       
};

/// @brief "http://schemas.microsoft.com/2003/10/Serialization/":duration is a simpleType restriction of type xs:duration.
///
/// Content pattern is "\\-?P(\\d*D)?(T(\\d*H)?(\\d*M)?(\\d*(\\.\\d*)?S)?)?".
/// Value range is -P10675199DT2H48M5.4775808S to P10675199DT2H48M5.4775807S.
typedef xsd__duration ns2__duration "\\-?P(\\d*D)?(T(\\d*H)?(\\d*M)?(\\d*(\\.\\d*)?S)?)?";

/// @brief Class wrapper for type ns2__duration derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class ns2__duration__ : public xsd__anyType
{ public:
    ns2__duration                        __item;                       
};

/// @brief "http://schemas.microsoft.com/2003/10/Serialization/":guid is a simpleType restriction of type xs:string.
///
/// Content pattern is "[\\da-fA-F]{8}-[\\da-fA-F]{4}-[\\da-fA-F]{4}-[\\da-fA-F]{4}-[\\da-fA-F]{12}".
typedef std::string ns2__guid "[\\da-fA-F]{8}-[\\da-fA-F]{4}-[\\da-fA-F]{4}-[\\da-fA-F]{4}-[\\da-fA-F]{12}";

/// @brief Class wrapper for type ns2__guid derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class ns2__guid__ : public xsd__anyType
{ public:
    ns2__guid                            __item;                       
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01*
 *                                                                            *
\******************************************************************************/

/// @brief "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01":PostTapingCollectShuttleMissionStatusType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "ns3__PostTapingCollectShuttleMissionStatusType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum ns3__PostTapingCollectShuttleMissionStatusType
{
	ns3__PostTapingCollectShuttleMissionStatusType__Ok,	///< xs:string value="Ok"
	ns3__PostTapingCollectShuttleMissionStatusType__Nok,	///< xs:string value="Nok"
};

/// @brief Class wrapper for type enum ns3__PostTapingCollectShuttleMissionStatusType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class ns3__PostTapingCollectShuttleMissionStatusType_ : public xsd__anyType
{ public:
    enum ns3__PostTapingCollectShuttleMissionStatusType  __item;                       
};

/// @brief "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01":PostTapingCollectShuttleRunningModeType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "ns3__PostTapingCollectShuttleRunningModeType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum ns3__PostTapingCollectShuttleRunningModeType
{
	ns3__PostTapingCollectShuttleRunningModeType__Manual,	///< xs:string value="Manual"
	ns3__PostTapingCollectShuttleRunningModeType__Rest,	///< xs:string value="Rest"
	ns3__PostTapingCollectShuttleRunningModeType__MissionInProgress,	///< xs:string value="MissionInProgress"
	ns3__PostTapingCollectShuttleRunningModeType__Default,	///< xs:string value="Default"
};

/// @brief Class wrapper for type enum ns3__PostTapingCollectShuttleRunningModeType derived from xsd__anyType.
///
/// @note Use option -P to remove this class.
class ns3__PostTapingCollectShuttleRunningModeType_ : public xsd__anyType
{ public:
    enum ns3__PostTapingCollectShuttleRunningModeType  __item;                       
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://tempuri.org/":TapingOutputConveyorNumber
/// @brief "http://tempuri.org/":TapingOutputConveyorNumber is a complexType.
///
/// @note class _ns1__TapingOutputConveyorNumber operations:
/// - _ns1__TapingOutputConveyorNumber* soap_new__ns1__TapingOutputConveyorNumber(soap*) allocate and default initialize
/// - _ns1__TapingOutputConveyorNumber* soap_new__ns1__TapingOutputConveyorNumber(soap*, int num) allocate and default initialize an array
/// - _ns1__TapingOutputConveyorNumber* soap_new_req__ns1__TapingOutputConveyorNumber(soap*, ...) allocate, set required members
/// - _ns1__TapingOutputConveyorNumber* soap_new_set__ns1__TapingOutputConveyorNumber(soap*, ...) allocate, set all public members
/// - _ns1__TapingOutputConveyorNumber::soap_default(soap*) default initialize members
/// - int soap_read__ns1__TapingOutputConveyorNumber(soap*, _ns1__TapingOutputConveyorNumber*) deserialize from a stream
/// - int soap_write__ns1__TapingOutputConveyorNumber(soap*, _ns1__TapingOutputConveyorNumber*) serialize to a stream
/// - _ns1__TapingOutputConveyorNumber* _ns1__TapingOutputConveyorNumber::soap_dup(soap*) returns deep copy of _ns1__TapingOutputConveyorNumber, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns1__TapingOutputConveyorNumber::soap_del() deep deletes _ns1__TapingOutputConveyorNumber data members, use only after _ns1__TapingOutputConveyorNumber::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ns1__TapingOutputConveyorNumber::soap_type() returns SOAP_TYPE__ns1__TapingOutputConveyorNumber or derived type identifier
class _ns1__TapingOutputConveyorNumber
{ public:
/// Element "request" of type "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01":PostTapingCollectShuttleTapingOutputConveyorRequest.
    ns3__PostTapingCollectShuttleTapingOutputConveyorRequest*  request                        0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://tempuri.org/":TapingOutputConveyorNumberResponse
/// @brief "http://tempuri.org/":TapingOutputConveyorNumberResponse is a complexType.
///
/// @note class _ns1__TapingOutputConveyorNumberResponse operations:
/// - _ns1__TapingOutputConveyorNumberResponse* soap_new__ns1__TapingOutputConveyorNumberResponse(soap*) allocate and default initialize
/// - _ns1__TapingOutputConveyorNumberResponse* soap_new__ns1__TapingOutputConveyorNumberResponse(soap*, int num) allocate and default initialize an array
/// - _ns1__TapingOutputConveyorNumberResponse* soap_new_req__ns1__TapingOutputConveyorNumberResponse(soap*, ...) allocate, set required members
/// - _ns1__TapingOutputConveyorNumberResponse* soap_new_set__ns1__TapingOutputConveyorNumberResponse(soap*, ...) allocate, set all public members
/// - _ns1__TapingOutputConveyorNumberResponse::soap_default(soap*) default initialize members
/// - int soap_read__ns1__TapingOutputConveyorNumberResponse(soap*, _ns1__TapingOutputConveyorNumberResponse*) deserialize from a stream
/// - int soap_write__ns1__TapingOutputConveyorNumberResponse(soap*, _ns1__TapingOutputConveyorNumberResponse*) serialize to a stream
/// - _ns1__TapingOutputConveyorNumberResponse* _ns1__TapingOutputConveyorNumberResponse::soap_dup(soap*) returns deep copy of _ns1__TapingOutputConveyorNumberResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns1__TapingOutputConveyorNumberResponse::soap_del() deep deletes _ns1__TapingOutputConveyorNumberResponse data members, use only after _ns1__TapingOutputConveyorNumberResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ns1__TapingOutputConveyorNumberResponse::soap_type() returns SOAP_TYPE__ns1__TapingOutputConveyorNumberResponse or derived type identifier
class _ns1__TapingOutputConveyorNumberResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://tempuri.org/":MissionStatus
/// @brief "http://tempuri.org/":MissionStatus is a complexType.
///
/// @note class _ns1__MissionStatus operations:
/// - _ns1__MissionStatus* soap_new__ns1__MissionStatus(soap*) allocate and default initialize
/// - _ns1__MissionStatus* soap_new__ns1__MissionStatus(soap*, int num) allocate and default initialize an array
/// - _ns1__MissionStatus* soap_new_req__ns1__MissionStatus(soap*, ...) allocate, set required members
/// - _ns1__MissionStatus* soap_new_set__ns1__MissionStatus(soap*, ...) allocate, set all public members
/// - _ns1__MissionStatus::soap_default(soap*) default initialize members
/// - int soap_read__ns1__MissionStatus(soap*, _ns1__MissionStatus*) deserialize from a stream
/// - int soap_write__ns1__MissionStatus(soap*, _ns1__MissionStatus*) serialize to a stream
/// - _ns1__MissionStatus* _ns1__MissionStatus::soap_dup(soap*) returns deep copy of _ns1__MissionStatus, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns1__MissionStatus::soap_del() deep deletes _ns1__MissionStatus data members, use only after _ns1__MissionStatus::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ns1__MissionStatus::soap_type() returns SOAP_TYPE__ns1__MissionStatus or derived type identifier
class _ns1__MissionStatus
{ public:
/// Element "request" of type "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01":PostTapingCollectShuttleMissionStatusRequest.
    ns3__PostTapingCollectShuttleMissionStatusRequest*  request                        0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://tempuri.org/":MissionStatusResponse
/// @brief "http://tempuri.org/":MissionStatusResponse is a complexType.
///
/// @note class _ns1__MissionStatusResponse operations:
/// - _ns1__MissionStatusResponse* soap_new__ns1__MissionStatusResponse(soap*) allocate and default initialize
/// - _ns1__MissionStatusResponse* soap_new__ns1__MissionStatusResponse(soap*, int num) allocate and default initialize an array
/// - _ns1__MissionStatusResponse* soap_new_req__ns1__MissionStatusResponse(soap*, ...) allocate, set required members
/// - _ns1__MissionStatusResponse* soap_new_set__ns1__MissionStatusResponse(soap*, ...) allocate, set all public members
/// - _ns1__MissionStatusResponse::soap_default(soap*) default initialize members
/// - int soap_read__ns1__MissionStatusResponse(soap*, _ns1__MissionStatusResponse*) deserialize from a stream
/// - int soap_write__ns1__MissionStatusResponse(soap*, _ns1__MissionStatusResponse*) serialize to a stream
/// - _ns1__MissionStatusResponse* _ns1__MissionStatusResponse::soap_dup(soap*) returns deep copy of _ns1__MissionStatusResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns1__MissionStatusResponse::soap_del() deep deletes _ns1__MissionStatusResponse data members, use only after _ns1__MissionStatusResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ns1__MissionStatusResponse::soap_type() returns SOAP_TYPE__ns1__MissionStatusResponse or derived type identifier
class _ns1__MissionStatusResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://tempuri.org/":ReportRunningMode
/// @brief "http://tempuri.org/":ReportRunningMode is a complexType.
///
/// @note class _ns1__ReportRunningMode operations:
/// - _ns1__ReportRunningMode* soap_new__ns1__ReportRunningMode(soap*) allocate and default initialize
/// - _ns1__ReportRunningMode* soap_new__ns1__ReportRunningMode(soap*, int num) allocate and default initialize an array
/// - _ns1__ReportRunningMode* soap_new_req__ns1__ReportRunningMode(soap*, ...) allocate, set required members
/// - _ns1__ReportRunningMode* soap_new_set__ns1__ReportRunningMode(soap*, ...) allocate, set all public members
/// - _ns1__ReportRunningMode::soap_default(soap*) default initialize members
/// - int soap_read__ns1__ReportRunningMode(soap*, _ns1__ReportRunningMode*) deserialize from a stream
/// - int soap_write__ns1__ReportRunningMode(soap*, _ns1__ReportRunningMode*) serialize to a stream
/// - _ns1__ReportRunningMode* _ns1__ReportRunningMode::soap_dup(soap*) returns deep copy of _ns1__ReportRunningMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns1__ReportRunningMode::soap_del() deep deletes _ns1__ReportRunningMode data members, use only after _ns1__ReportRunningMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ns1__ReportRunningMode::soap_type() returns SOAP_TYPE__ns1__ReportRunningMode or derived type identifier
class _ns1__ReportRunningMode
{ public:
/// Element "request" of type "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01":PostTapingCollectShuttleReportRunningModeRequest.
    ns3__PostTapingCollectShuttleReportRunningModeRequest*  request                        0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://tempuri.org/":ReportRunningModeResponse
/// @brief "http://tempuri.org/":ReportRunningModeResponse is a complexType.
///
/// @note class _ns1__ReportRunningModeResponse operations:
/// - _ns1__ReportRunningModeResponse* soap_new__ns1__ReportRunningModeResponse(soap*) allocate and default initialize
/// - _ns1__ReportRunningModeResponse* soap_new__ns1__ReportRunningModeResponse(soap*, int num) allocate and default initialize an array
/// - _ns1__ReportRunningModeResponse* soap_new_req__ns1__ReportRunningModeResponse(soap*, ...) allocate, set required members
/// - _ns1__ReportRunningModeResponse* soap_new_set__ns1__ReportRunningModeResponse(soap*, ...) allocate, set all public members
/// - _ns1__ReportRunningModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__ns1__ReportRunningModeResponse(soap*, _ns1__ReportRunningModeResponse*) deserialize from a stream
/// - int soap_write__ns1__ReportRunningModeResponse(soap*, _ns1__ReportRunningModeResponse*) serialize to a stream
/// - _ns1__ReportRunningModeResponse* _ns1__ReportRunningModeResponse::soap_dup(soap*) returns deep copy of _ns1__ReportRunningModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _ns1__ReportRunningModeResponse::soap_del() deep deletes _ns1__ReportRunningModeResponse data members, use only after _ns1__ReportRunningModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _ns1__ReportRunningModeResponse::soap_type() returns SOAP_TYPE__ns1__ReportRunningModeResponse or derived type identifier
class _ns1__ReportRunningModeResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01*
 *                                                                            *
\******************************************************************************/

/// @brief "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01":PostTapingCollectShuttleTapingOutputConveyorRequest is a complexType.
///
/// @note class ns3__PostTapingCollectShuttleTapingOutputConveyorRequest operations:
/// - ns3__PostTapingCollectShuttleTapingOutputConveyorRequest* soap_new_ns3__PostTapingCollectShuttleTapingOutputConveyorRequest(soap*) allocate and default initialize
/// - ns3__PostTapingCollectShuttleTapingOutputConveyorRequest* soap_new_ns3__PostTapingCollectShuttleTapingOutputConveyorRequest(soap*, int num) allocate and default initialize an array
/// - ns3__PostTapingCollectShuttleTapingOutputConveyorRequest* soap_new_req_ns3__PostTapingCollectShuttleTapingOutputConveyorRequest(soap*, ...) allocate, set required members
/// - ns3__PostTapingCollectShuttleTapingOutputConveyorRequest* soap_new_set_ns3__PostTapingCollectShuttleTapingOutputConveyorRequest(soap*, ...) allocate, set all public members
/// - ns3__PostTapingCollectShuttleTapingOutputConveyorRequest::soap_default(soap*) default initialize members
/// - int soap_read_ns3__PostTapingCollectShuttleTapingOutputConveyorRequest(soap*, ns3__PostTapingCollectShuttleTapingOutputConveyorRequest*) deserialize from a stream
/// - int soap_write_ns3__PostTapingCollectShuttleTapingOutputConveyorRequest(soap*, ns3__PostTapingCollectShuttleTapingOutputConveyorRequest*) serialize to a stream
/// - ns3__PostTapingCollectShuttleTapingOutputConveyorRequest* ns3__PostTapingCollectShuttleTapingOutputConveyorRequest::soap_dup(soap*) returns deep copy of ns3__PostTapingCollectShuttleTapingOutputConveyorRequest, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ns3__PostTapingCollectShuttleTapingOutputConveyorRequest::soap_del() deep deletes ns3__PostTapingCollectShuttleTapingOutputConveyorRequest data members, use only after ns3__PostTapingCollectShuttleTapingOutputConveyorRequest::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ns3__PostTapingCollectShuttleTapingOutputConveyorRequest::soap_type() returns SOAP_TYPE_ns3__PostTapingCollectShuttleTapingOutputConveyorRequest or derived type identifier
class ns3__PostTapingCollectShuttleTapingOutputConveyorRequest : public xsd__anyType
{ public:
/// Element "TapingOutputConveyorNumber" of type xs:int.
    int*                                 TapingOutputConveyorNumber     0;	///< Optional element.
};

/// @brief "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01":PostTapingCollectShuttleMissionStatusRequest is a complexType.
///
/// @note class ns3__PostTapingCollectShuttleMissionStatusRequest operations:
/// - ns3__PostTapingCollectShuttleMissionStatusRequest* soap_new_ns3__PostTapingCollectShuttleMissionStatusRequest(soap*) allocate and default initialize
/// - ns3__PostTapingCollectShuttleMissionStatusRequest* soap_new_ns3__PostTapingCollectShuttleMissionStatusRequest(soap*, int num) allocate and default initialize an array
/// - ns3__PostTapingCollectShuttleMissionStatusRequest* soap_new_req_ns3__PostTapingCollectShuttleMissionStatusRequest(soap*, ...) allocate, set required members
/// - ns3__PostTapingCollectShuttleMissionStatusRequest* soap_new_set_ns3__PostTapingCollectShuttleMissionStatusRequest(soap*, ...) allocate, set all public members
/// - ns3__PostTapingCollectShuttleMissionStatusRequest::soap_default(soap*) default initialize members
/// - int soap_read_ns3__PostTapingCollectShuttleMissionStatusRequest(soap*, ns3__PostTapingCollectShuttleMissionStatusRequest*) deserialize from a stream
/// - int soap_write_ns3__PostTapingCollectShuttleMissionStatusRequest(soap*, ns3__PostTapingCollectShuttleMissionStatusRequest*) serialize to a stream
/// - ns3__PostTapingCollectShuttleMissionStatusRequest* ns3__PostTapingCollectShuttleMissionStatusRequest::soap_dup(soap*) returns deep copy of ns3__PostTapingCollectShuttleMissionStatusRequest, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ns3__PostTapingCollectShuttleMissionStatusRequest::soap_del() deep deletes ns3__PostTapingCollectShuttleMissionStatusRequest data members, use only after ns3__PostTapingCollectShuttleMissionStatusRequest::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ns3__PostTapingCollectShuttleMissionStatusRequest::soap_type() returns SOAP_TYPE_ns3__PostTapingCollectShuttleMissionStatusRequest or derived type identifier
class ns3__PostTapingCollectShuttleMissionStatusRequest : public xsd__anyType
{ public:
/// Element "MissionNumber" of type xs:int.
    int*                                 MissionNumber                  0;	///< Optional element.
/// Element "MissionStatus" of type "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01":PostTapingCollectShuttleMissionStatusType.
    enum ns3__PostTapingCollectShuttleMissionStatusType*  MissionStatus                  0;	///< Optional element.
};

/// @brief "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01":PostTapingCollectShuttleReportRunningModeRequest is a complexType.
///
/// @note class ns3__PostTapingCollectShuttleReportRunningModeRequest operations:
/// - ns3__PostTapingCollectShuttleReportRunningModeRequest* soap_new_ns3__PostTapingCollectShuttleReportRunningModeRequest(soap*) allocate and default initialize
/// - ns3__PostTapingCollectShuttleReportRunningModeRequest* soap_new_ns3__PostTapingCollectShuttleReportRunningModeRequest(soap*, int num) allocate and default initialize an array
/// - ns3__PostTapingCollectShuttleReportRunningModeRequest* soap_new_req_ns3__PostTapingCollectShuttleReportRunningModeRequest(soap*, ...) allocate, set required members
/// - ns3__PostTapingCollectShuttleReportRunningModeRequest* soap_new_set_ns3__PostTapingCollectShuttleReportRunningModeRequest(soap*, ...) allocate, set all public members
/// - ns3__PostTapingCollectShuttleReportRunningModeRequest::soap_default(soap*) default initialize members
/// - int soap_read_ns3__PostTapingCollectShuttleReportRunningModeRequest(soap*, ns3__PostTapingCollectShuttleReportRunningModeRequest*) deserialize from a stream
/// - int soap_write_ns3__PostTapingCollectShuttleReportRunningModeRequest(soap*, ns3__PostTapingCollectShuttleReportRunningModeRequest*) serialize to a stream
/// - ns3__PostTapingCollectShuttleReportRunningModeRequest* ns3__PostTapingCollectShuttleReportRunningModeRequest::soap_dup(soap*) returns deep copy of ns3__PostTapingCollectShuttleReportRunningModeRequest, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - ns3__PostTapingCollectShuttleReportRunningModeRequest::soap_del() deep deletes ns3__PostTapingCollectShuttleReportRunningModeRequest data members, use only after ns3__PostTapingCollectShuttleReportRunningModeRequest::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int ns3__PostTapingCollectShuttleReportRunningModeRequest::soap_type() returns SOAP_TYPE_ns3__PostTapingCollectShuttleReportRunningModeRequest or derived type identifier
class ns3__PostTapingCollectShuttleReportRunningModeRequest : public xsd__anyType
{ public:
/// Element "DefaultCode" of type xs:int.
    int*                                 DefaultCode                    0;	///< Optional element.
/// Element "DefaultLabel" of type xs:string.
    std::string*                         DefaultLabel                   0;	///< Optional element.
/// Element "EquipmentCode" of type xs:int.
    int*                                 EquipmentCode                  0;	///< Optional element.
/// Element "RunningMode" of type "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01":PostTapingCollectShuttleRunningModeType.
    enum ns3__PostTapingCollectShuttleRunningModeType*  RunningMode                    0;	///< Optional element.
/// Element "RunningModeDateTime" of type xs:dateTime.
    time_t*                              RunningModeDateTime            0;	///< Optional element.
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":anyType of type xs:anyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":anyURI of type xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":base64Binary of type xs:base64Binary.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":boolean of type xs:boolean.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":byte of type xs:byte.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":dateTime of type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":decimal of type xs:decimal.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":double of type xs:double.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":float of type xs:float.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":int of type xs:int.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":long of type xs:long.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":QName of type xs:QName.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":short of type xs:short.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":string of type xs:string.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":unsignedByte of type xs:unsignedByte.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":unsignedInt of type xs:unsignedInt.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":unsignedLong of type xs:unsignedLong.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":unsignedShort of type xs:unsignedShort.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":char of type "http://schemas.microsoft.com/2003/10/Serialization/":char.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":duration of type "http://schemas.microsoft.com/2003/10/Serialization/":duration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":guid of type "http://schemas.microsoft.com/2003/10/Serialization/":guid.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://schemas.microsoft.com/2003/10/Serialization/":FactoryType of simpleType xs:QName.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration.

/// @brief Top-level attribute "http://schemas.microsoft.com/2003/10/Serialization/":Id of simpleType xs:ID.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration.

/// @brief Top-level attribute "http://schemas.microsoft.com/2003/10/Serialization/":Ref of simpleType xs:IDREF.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01*
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01":PostTapingCollectShuttleTapingOutputConveyorRequest of type "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01":PostTapingCollectShuttleTapingOutputConveyorRequest.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01":PostTapingCollectShuttleMissionStatusRequest of type "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01":PostTapingCollectShuttleMissionStatusRequest.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01":PostTapingCollectShuttleMissionStatusType of type "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01":PostTapingCollectShuttleMissionStatusType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01":PostTapingCollectShuttleReportRunningModeRequest of type "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01":PostTapingCollectShuttleReportRunningModeRequest.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01":PostTapingCollectShuttleRunningModeType of type "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01":PostTapingCollectShuttleRunningModeType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01*
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap ns1  service name:	BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01 
//gsoap ns1  service type:	IInterfacesPostTapingCollectShuttleToMx01 
//gsoap ns1  service port:	http://wstest.groupeliebot.fr/Mx/Lima1/Mx.Broker.Lima.Endpoint/Interface/InterfacesPostTapingCollectShuttleToMx0101.svc 
//gsoap ns1  service namespace:	http://tempuri.org/ 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage InterfacesPostTapingCollectShuttleToMx01Impl Definitions

@section InterfacesPostTapingCollectShuttleToMx01Impl_bindings Service Bindings

  - @ref BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01

@section InterfacesPostTapingCollectShuttleToMx01Impl_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/** @page BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01 Binding "BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01"

@section BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01_operations Operations of Binding "BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01"

  - @ref __ns1__TapingOutputConveyorNumber

  - @ref __ns1__MissionStatus

  - @ref __ns1__ReportRunningMode

@section BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01_ports Default endpoints of Binding "BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01"

  - http://wstest.groupeliebot.fr/Mx/Lima1/Mx.Broker.Lima.Endpoint/Interface/InterfacesPostTapingCollectShuttleToMx0101.svc

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__TapingOutputConveyorNumber                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__TapingOutputConveyorNumber" of service binding "BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01".

  - SOAP document/literal style messaging

  - Default endpoints:
    - http://wstest.groupeliebot.fr/Mx/Lima1/Mx.Broker.Lima.Endpoint/Interface/InterfacesPostTapingCollectShuttleToMx0101.svc

  - Default SOAP action or REST location path:
    - "http://tempuri.org/IInterfacesPostTapingCollectShuttleToMx01/TapingOutputConveyorNumber"

  - Addressing input action: "http://tempuri.org/IInterfacesPostTapingCollectShuttleToMx01/TapingOutputConveyorNumber"

  - Addressing output action: "http://tempuri.org/IInterfacesPostTapingCollectShuttleToMx01/TapingOutputConveyorNumberResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__TapingOutputConveyorNumber(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__TapingOutputConveyorNumber*   ns1__TapingOutputConveyorNumber,
    // output parameters:
    _ns1__TapingOutputConveyorNumberResponse&ns1__TapingOutputConveyorNumberResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__TapingOutputConveyorNumber(
    struct soap *soap,
    // input parameters:
    _ns1__TapingOutputConveyorNumber*   ns1__TapingOutputConveyorNumber,
    // output parameters:
    _ns1__TapingOutputConveyorNumberResponse&ns1__TapingOutputConveyorNumberResponse
  );
@endcode

C++ proxy class (defined in soapBasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01Proxy.h generated with soapcpp2):
@code
  class BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapBasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01Service.h generated with soapcpp2):
@code
  class BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	TapingOutputConveyorNumber SOAP
//gsoap ns1  service method-style:	TapingOutputConveyorNumber document
//gsoap ns1  service method-encoding:	TapingOutputConveyorNumber literal
//gsoap ns1  service method-input-action:	TapingOutputConveyorNumber http://tempuri.org/IInterfacesPostTapingCollectShuttleToMx01/TapingOutputConveyorNumber
//gsoap ns1  service method-output-action:	TapingOutputConveyorNumber http://tempuri.org/IInterfacesPostTapingCollectShuttleToMx01/TapingOutputConveyorNumberResponse
int __ns1__TapingOutputConveyorNumber(
    _ns1__TapingOutputConveyorNumber*   ns1__TapingOutputConveyorNumber,	///< Input parameter
    _ns1__TapingOutputConveyorNumberResponse&ns1__TapingOutputConveyorNumberResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__MissionStatus                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__MissionStatus" of service binding "BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01".

  - SOAP document/literal style messaging

  - Default endpoints:
    - http://wstest.groupeliebot.fr/Mx/Lima1/Mx.Broker.Lima.Endpoint/Interface/InterfacesPostTapingCollectShuttleToMx0101.svc

  - Default SOAP action or REST location path:
    - "http://tempuri.org/IInterfacesPostTapingCollectShuttleToMx01/MissionStatus"

  - Addressing input action: "http://tempuri.org/IInterfacesPostTapingCollectShuttleToMx01/MissionStatus"

  - Addressing output action: "http://tempuri.org/IInterfacesPostTapingCollectShuttleToMx01/MissionStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__MissionStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__MissionStatus*                ns1__MissionStatus,
    // output parameters:
    _ns1__MissionStatusResponse        &ns1__MissionStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__MissionStatus(
    struct soap *soap,
    // input parameters:
    _ns1__MissionStatus*                ns1__MissionStatus,
    // output parameters:
    _ns1__MissionStatusResponse        &ns1__MissionStatusResponse
  );
@endcode

C++ proxy class (defined in soapBasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01Proxy.h generated with soapcpp2):
@code
  class BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapBasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01Service.h generated with soapcpp2):
@code
  class BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	MissionStatus SOAP
//gsoap ns1  service method-style:	MissionStatus document
//gsoap ns1  service method-encoding:	MissionStatus literal
//gsoap ns1  service method-input-action:	MissionStatus http://tempuri.org/IInterfacesPostTapingCollectShuttleToMx01/MissionStatus
//gsoap ns1  service method-output-action:	MissionStatus http://tempuri.org/IInterfacesPostTapingCollectShuttleToMx01/MissionStatusResponse
int __ns1__MissionStatus(
    _ns1__MissionStatus*                ns1__MissionStatus,	///< Input parameter
    _ns1__MissionStatusResponse        &ns1__MissionStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ReportRunningMode                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__ns1__ReportRunningMode" of service binding "BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01".

  - SOAP document/literal style messaging

  - Default endpoints:
    - http://wstest.groupeliebot.fr/Mx/Lima1/Mx.Broker.Lima.Endpoint/Interface/InterfacesPostTapingCollectShuttleToMx0101.svc

  - Default SOAP action or REST location path:
    - "http://tempuri.org/IInterfacesPostTapingCollectShuttleToMx01/ReportRunningMode"

  - Addressing input action: "http://tempuri.org/IInterfacesPostTapingCollectShuttleToMx01/ReportRunningMode"

  - Addressing output action: "http://tempuri.org/IInterfacesPostTapingCollectShuttleToMx01/ReportRunningModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ReportRunningMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__ReportRunningMode*            ns1__ReportRunningMode,
    // output parameters:
    _ns1__ReportRunningModeResponse    &ns1__ReportRunningModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ReportRunningMode(
    struct soap *soap,
    // input parameters:
    _ns1__ReportRunningMode*            ns1__ReportRunningMode,
    // output parameters:
    _ns1__ReportRunningModeResponse    &ns1__ReportRunningModeResponse
  );
@endcode

C++ proxy class (defined in soapBasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01Proxy.h generated with soapcpp2):
@code
  class BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapBasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01Service.h generated with soapcpp2):
@code
  class BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	ReportRunningMode SOAP
//gsoap ns1  service method-style:	ReportRunningMode document
//gsoap ns1  service method-encoding:	ReportRunningMode literal
//gsoap ns1  service method-input-action:	ReportRunningMode http://tempuri.org/IInterfacesPostTapingCollectShuttleToMx01/ReportRunningMode
//gsoap ns1  service method-output-action:	ReportRunningMode http://tempuri.org/IInterfacesPostTapingCollectShuttleToMx01/ReportRunningModeResponse
int __ns1__ReportRunningMode(
    _ns1__ReportRunningMode*            ns1__ReportRunningMode,	///< Input parameter
    _ns1__ReportRunningModeResponse    &ns1__ReportRunningModeResponse	///< Output parameter
);

/** @page BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01 Binding "BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01"

@section BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01_policy_enablers Policy Enablers of Binding "BasicHttpBinding_USCOREIInterfacesPostTapingCollectShuttleToMx01"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/** @page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings that are contractually bound by WSDLs and
are auto-generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data
bindings are adopted from XML schemas as part of the WSDL types section or when
running wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

@note The following readers and writers are C/C++ data type (de)serializers
auto-generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

@note Data can be read and deserialized from:
  - an int file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = (int)...
  - a C++ stream (istream, stringstream), using soap->is = (istream*)...
  - a C string, using soap->is = (const char*)...
  - any input, using the soap->frecv() callback

@note Data can be serialized and written to:
  - an int file descriptor, using soap->sendfd = (int)...
  - a socket, using soap->socket = (int)...
  - a C++ stream (ostream, stringstream), using soap->os = (ostream*)...
  - a C string, using soap->os = (const char**)...
  - any output, using the soap->fsend() callback

@note The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_set_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_set_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


*/

/**

@section ns1 Top-level root elements of schema "http://tempuri.org/"

  - <ns1:TapingOutputConveyorNumber> @ref _ns1__TapingOutputConveyorNumber
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__TapingOutputConveyorNumber(struct soap*, _ns1__TapingOutputConveyorNumber*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__TapingOutputConveyorNumber(struct soap*, _ns1__TapingOutputConveyorNumber*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__TapingOutputConveyorNumber(struct soap*, const char *URL, _ns1__TapingOutputConveyorNumber*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__TapingOutputConveyorNumber(struct soap*, const char *URL, _ns1__TapingOutputConveyorNumber*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__TapingOutputConveyorNumber(struct soap*, const char *URL, _ns1__TapingOutputConveyorNumber*);
    soap_POST_recv__ns1__TapingOutputConveyorNumber(struct soap*, _ns1__TapingOutputConveyorNumber*);
    @endcode

  - <ns1:TapingOutputConveyorNumberResponse> @ref _ns1__TapingOutputConveyorNumberResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__TapingOutputConveyorNumberResponse(struct soap*, _ns1__TapingOutputConveyorNumberResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__TapingOutputConveyorNumberResponse(struct soap*, _ns1__TapingOutputConveyorNumberResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__TapingOutputConveyorNumberResponse(struct soap*, const char *URL, _ns1__TapingOutputConveyorNumberResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__TapingOutputConveyorNumberResponse(struct soap*, const char *URL, _ns1__TapingOutputConveyorNumberResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__TapingOutputConveyorNumberResponse(struct soap*, const char *URL, _ns1__TapingOutputConveyorNumberResponse*);
    soap_POST_recv__ns1__TapingOutputConveyorNumberResponse(struct soap*, _ns1__TapingOutputConveyorNumberResponse*);
    @endcode

  - <ns1:MissionStatus> @ref _ns1__MissionStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__MissionStatus(struct soap*, _ns1__MissionStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__MissionStatus(struct soap*, _ns1__MissionStatus*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__MissionStatus(struct soap*, const char *URL, _ns1__MissionStatus*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__MissionStatus(struct soap*, const char *URL, _ns1__MissionStatus*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__MissionStatus(struct soap*, const char *URL, _ns1__MissionStatus*);
    soap_POST_recv__ns1__MissionStatus(struct soap*, _ns1__MissionStatus*);
    @endcode

  - <ns1:MissionStatusResponse> @ref _ns1__MissionStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__MissionStatusResponse(struct soap*, _ns1__MissionStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__MissionStatusResponse(struct soap*, _ns1__MissionStatusResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__MissionStatusResponse(struct soap*, const char *URL, _ns1__MissionStatusResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__MissionStatusResponse(struct soap*, const char *URL, _ns1__MissionStatusResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__MissionStatusResponse(struct soap*, const char *URL, _ns1__MissionStatusResponse*);
    soap_POST_recv__ns1__MissionStatusResponse(struct soap*, _ns1__MissionStatusResponse*);
    @endcode

  - <ns1:ReportRunningMode> @ref _ns1__ReportRunningMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ReportRunningMode(struct soap*, _ns1__ReportRunningMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ReportRunningMode(struct soap*, _ns1__ReportRunningMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__ReportRunningMode(struct soap*, const char *URL, _ns1__ReportRunningMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__ReportRunningMode(struct soap*, const char *URL, _ns1__ReportRunningMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__ReportRunningMode(struct soap*, const char *URL, _ns1__ReportRunningMode*);
    soap_POST_recv__ns1__ReportRunningMode(struct soap*, _ns1__ReportRunningMode*);
    @endcode

  - <ns1:ReportRunningModeResponse> @ref _ns1__ReportRunningModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ReportRunningModeResponse(struct soap*, _ns1__ReportRunningModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ReportRunningModeResponse(struct soap*, _ns1__ReportRunningModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__ns1__ReportRunningModeResponse(struct soap*, const char *URL, _ns1__ReportRunningModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__ns1__ReportRunningModeResponse(struct soap*, const char *URL, _ns1__ReportRunningModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__ns1__ReportRunningModeResponse(struct soap*, const char *URL, _ns1__ReportRunningModeResponse*);
    soap_POST_recv__ns1__ReportRunningModeResponse(struct soap*, _ns1__ReportRunningModeResponse*);
    @endcode

*/

/**

@section ns2 Top-level root elements of schema "http://schemas.microsoft.com/2003/10/Serialization/"

  - <ns2:anyType> (use wsdl2h option -g to auto-generate type _ns2__anyType)

  - <ns2:anyURI> (use wsdl2h option -g to auto-generate type _ns2__anyURI)

  - <ns2:base64Binary> (use wsdl2h option -g to auto-generate type _ns2__base64Binary)

  - <ns2:boolean> (use wsdl2h option -g to auto-generate type _ns2__boolean)

  - <ns2:byte> (use wsdl2h option -g to auto-generate type _ns2__byte)

  - <ns2:dateTime> (use wsdl2h option -g to auto-generate type _ns2__dateTime)

  - <ns2:decimal> (use wsdl2h option -g to auto-generate type _ns2__decimal)

  - <ns2:double> (use wsdl2h option -g to auto-generate type _ns2__double)

  - <ns2:float> (use wsdl2h option -g to auto-generate type _ns2__float)

  - <ns2:int> (use wsdl2h option -g to auto-generate type _ns2__int)

  - <ns2:long> (use wsdl2h option -g to auto-generate type _ns2__long)

  - <ns2:QName> (use wsdl2h option -g to auto-generate type _ns2__QName)

  - <ns2:short> (use wsdl2h option -g to auto-generate type _ns2__short)

  - <ns2:string> (use wsdl2h option -g to auto-generate type _ns2__string)

  - <ns2:unsignedByte> (use wsdl2h option -g to auto-generate type _ns2__unsignedByte)

  - <ns2:unsignedInt> (use wsdl2h option -g to auto-generate type _ns2__unsignedInt)

  - <ns2:unsignedLong> (use wsdl2h option -g to auto-generate type _ns2__unsignedLong)

  - <ns2:unsignedShort> (use wsdl2h option -g to auto-generate type _ns2__unsignedShort)

  - <ns2:char> (use wsdl2h option -g to auto-generate type _ns2__char)

  - <ns2:duration> (use wsdl2h option -g to auto-generate type _ns2__duration)

  - <ns2:guid> (use wsdl2h option -g to auto-generate type _ns2__guid)

*/

/**

@section ns3 Top-level root elements of schema "http://schemas.datacontract.org/2004/07/Mx.Broker.Std.Request.Interface.PostTapingCollectShuttle01"

  - <ns3:PostTapingCollectShuttleTapingOutputConveyorRequest> (use wsdl2h option -g to auto-generate type _ns3__PostTapingCollectShuttleTapingOutputConveyorRequest)

  - <ns3:PostTapingCollectShuttleMissionStatusRequest> (use wsdl2h option -g to auto-generate type _ns3__PostTapingCollectShuttleMissionStatusRequest)

  - <ns3:PostTapingCollectShuttleMissionStatusType> (use wsdl2h option -g to auto-generate type _ns3__PostTapingCollectShuttleMissionStatusType)

  - <ns3:PostTapingCollectShuttleReportRunningModeRequest> (use wsdl2h option -g to auto-generate type _ns3__PostTapingCollectShuttleReportRunningModeRequest)

  - <ns3:PostTapingCollectShuttleRunningModeType> (use wsdl2h option -g to auto-generate type _ns3__PostTapingCollectShuttleRunningModeType)

*/

/* End of client_collect.h */
